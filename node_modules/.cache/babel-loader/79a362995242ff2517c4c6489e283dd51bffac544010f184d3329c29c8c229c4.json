{"ast":null,"code":"var _jsxFileName = \"/Users/harshilvaria/Downloads/CSCI3130/Assignment2/frontend/src/components/WorkExperience.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WorkExperience = () => {\n  _s();\n  const {\n    role\n  } = useParams();\n  const [workExperiences, setWorkExperiences] = useState([]);\n  useEffect(() => {\n    const fetchWorkExperiences = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8080/api/resume/workExperience/${role}`);\n        setWorkExperiences(response.data);\n      } catch (error) {\n        console.error('Error fetching work experiences', error);\n      }\n    };\n    fetchWorkExperiences();\n  }, [role]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Work Experience for \", role]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: workExperiences.map((workExperience, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Name: \", workExperience.firstName, \" \", workExperience.lastName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Work Experience: \", workExperience.workExperience]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(WorkExperience, \"UlrdMPYjK0b4mFtZogjfaiNISIU=\", false, function () {\n  return [useParams];\n});\n_c = WorkExperience;\nexport default WorkExperience;\nvar _c;\n$RefreshReg$(_c, \"WorkExperience\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","WorkExperience","_s","role","workExperiences","setWorkExperiences","fetchWorkExperiences","response","get","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","workExperience","index","firstName","lastName","_c","$RefreshReg$"],"sources":["/Users/harshilvaria/Downloads/CSCI3130/Assignment2/frontend/src/components/WorkExperience.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport axios from 'axios';\n\nconst WorkExperience = () => {\n  const { role } = useParams();\n  const [workExperiences, setWorkExperiences] = useState([]);\n\n  useEffect(() => {\n    const fetchWorkExperiences = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8080/api/resume/workExperience/${role}`);\n        setWorkExperiences(response.data);\n      } catch (error) {\n        console.error('Error fetching work experiences', error);\n      }\n    };\n\n    fetchWorkExperiences();\n  }, [role]);\n\n  return (\n    <>\n        <div>\n      <h2>Work Experience for {role}</h2>\n      <ul>\n        {workExperiences.map((workExperience, index) => (\n          <li key={index}>\n            <p>Name: {workExperience.firstName} {workExperience.lastName}</p>\n            <p>Work Experience: {workExperience.workExperience}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n    </>\n\n  );\n};\n\nexport default WorkExperience;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAE5C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM;IAAEC;EAAK,CAAC,GAAGR,SAAS,CAAC,CAAC;EAC5B,MAAM,CAACS,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE1DD,SAAS,CAAC,MAAM;IACd,MAAMa,oBAAoB,GAAG,MAAAA,CAAA,KAAY;MACvC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,mDAAmDL,IAAI,EAAE,CAAC;QAC3FE,kBAAkB,CAACE,QAAQ,CAACE,IAAI,CAAC;MACnC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACzD;IACF,CAAC;IAEDJ,oBAAoB,CAAC,CAAC;EACxB,CAAC,EAAE,CAACH,IAAI,CAAC,CAAC;EAEV,oBACEL,OAAA,CAAAE,SAAA;IAAAY,QAAA,eACId,OAAA;MAAAc,QAAA,gBACFd,OAAA;QAAAc,QAAA,GAAI,sBAAoB,EAACT,IAAI;MAAA;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACnClB,OAAA;QAAAc,QAAA,EACGR,eAAe,CAACa,GAAG,CAAC,CAACC,cAAc,EAAEC,KAAK,kBACzCrB,OAAA;UAAAc,QAAA,gBACEd,OAAA;YAAAc,QAAA,GAAG,QAAM,EAACM,cAAc,CAACE,SAAS,EAAC,GAAC,EAACF,cAAc,CAACG,QAAQ;UAAA;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjElB,OAAA;YAAAc,QAAA,GAAG,mBAAiB,EAACM,cAAc,CAACA,cAAc;UAAA;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA,GAFhDG,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGV,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC,gBACJ,CAAC;AAGP,CAAC;AAACd,EAAA,CAjCID,cAAc;EAAA,QACDN,SAAS;AAAA;AAAA2B,EAAA,GADtBrB,cAAc;AAmCpB,eAAeA,cAAc;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}